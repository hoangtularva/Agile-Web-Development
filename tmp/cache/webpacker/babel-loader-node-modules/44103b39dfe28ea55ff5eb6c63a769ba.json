{"ast":null,"code":"var _jsxFileName = \"/home/hoangtu/ProjectRubyOnRailsWebMini (copy)/app/javascript/PayTypeSelector/index.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\n\nvar PayTypeSelector = /*#__PURE__*/function (_React$Component) {\n  _inherits(PayTypeSelector, _React$Component);\n\n  var _super = _createSuper(PayTypeSelector);\n\n  _createClass(PayTypeSelector, [{\n    key: \"onPayTypeSelected\",\n    value: function onPayTypeSelected(event) {\n      this.setState({\n        selectedPayType: event.target.value\n      });\n    }\n  }]);\n\n  function PayTypeSelector(props) {\n    var _this;\n\n    _classCallCheck(this, PayTypeSelector);\n\n    _this = _super.call(this, props);\n    _this.onPayTypeSelected = _this.onPayTypeSelected.bind(_assertThisInitialized(_this));\n    _this.state = {\n      selectedPayType: null\n    };\n    return _this;\n  }\n\n  _createClass(PayTypeSelector, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"order_pay_type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, \"Pay type\"), /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.onPayTypeSelected,\n        name: \"order[pay_type]\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, \"Select a payment method\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, \"Check\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Credit card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      }, \"Credit card\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Purchase order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, \"Purchase order\")));\n    }\n  }]);\n\n  return PayTypeSelector;\n}(React.Component);\n\nexport default PayTypeSelector;","map":{"version":3,"sources":["/home/hoangtu/ProjectRubyOnRailsWebMini (copy)/app/javascript/PayTypeSelector/index.jsx"],"names":["React","PayTypeSelector","event","setState","selectedPayType","target","value","props","onPayTypeSelected","bind","state","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IACMC,e;;;;;;;sCACgBC,K,EAAM;AAAC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAhC,OAAd;AAAwD;;;AACjF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AACA,UAAKC,KAAL,GAAa;AAAEN,MAAAA,eAAe,EAAE;AAAnB,KAAb;AAHe;AAId;;;;6BACI;AACD,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAQ,QAAA,QAAQ,EAAE,KAAKI,iBAAvB;AAA0C,QAAA,IAAI,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAQ,QAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,eAII;AAAQ,QAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CAFA,CADJ;AAWH;;;;EAnBqBR,KAAK,CAACW,S;;AAwBpC,eAAeV,eAAf","sourcesContent":["import React from 'react'\nclass PayTypeSelector extends React.Component {\n    onPayTypeSelected(event){this.setState({ selectedPayType: event.target.value });}\n    constructor(props) {\n        super(props);\n        this.onPayTypeSelected = this.onPayTypeSelected.bind(this);\n        this.state = { selectedPayType: null };\n        }\n    render() {\n            return (\n                <div className=\"field\">\n                <label htmlFor=\"order_pay_type\">Pay type</label>\n                <select onChange={this.onPayTypeSelected} name=\"order[pay_type]\">\n                    <option value=\"\">Select a payment method</option>\n                    <option value=\"Check\">Check</option>\n                    <option value=\"Credit card\">Credit card</option>\n                    <option value=\"Purchase order\">Purchase order</option>\n                </select>\n                </div>\n            );\n        }\n        \n\n    }\n\nexport default PayTypeSelector;\n\n"]},"metadata":{},"sourceType":"module"}